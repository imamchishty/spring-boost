<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
    </parent>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>jar</packaging>
    <name>${artifactId}</name>
    <description>${artifactId}</description>


    <!-- FIXME: Update with the correct settings -->
    <scm>
        <connection>scm:git:git@github.com:USERNAME/REPO.git</connection>
        <developerConnection>scm:git:git@github.com:USERNAME/REPO.git</developerConnection>
        <url>git@github.com:USERNAME/REPO.git</url>
        <tag>HEAD</tag>
    </scm>

    <!-- FIXME: Update with the correct settings -->
    <ciManagement>
        <url>ci-url</url>
    </ciManagement>

    <!-- FIXME: Update with the correct settings -->
    <issueManagement>
        <url>jira</url>
    </issueManagement>

    <!-- FIXME: Update with the correct settings -->
    <inceptionYear>2019</inceptionYear>

    <!-- FIXME: Update with the correct settings -->
    <organization>
        <name>NAME</name>
        <url>URL</url>
    </organization>

    <!-- FIXME: Update with the correct settings -->
    <developers>
        <developer>
            <id>ID</id>
            <name>NAME</name>
            <roles>
                <role>Developer</role>
                <role>Architect</role>
            </roles>
            <email>EMAIL</email>
        </developer>
    </developers>

    <properties>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>11</java.version>
        <spring-boot-admin.version>2.1.1</spring-boot-admin.version>
        <spring-cloud.version>Greenwich.RC2</spring-cloud.version>

        <!-- JMeter properties (defaulted - can be override via command line args) -->
        <host>localhost</host>
        <port>8080</port>

        <!-- CI settings -->
        <ci.build>${BUILD_NUMBER}</ci.build>
        <ci.url>${BUILD_URL}</ci.url>

        <!-- Spring boost version -->
        <built.using.spring.boost.version>3.0.0</built.using.spring.boost.version>

        <!-- Shedhack versions -->
        <shedhack.exception-controller-spring.version>2.1.0</shedhack.exception-controller-spring.version>
        <shedhack.exception-core.version>2.1.0</shedhack.exception-core.version>
        <shedhack.trace-request-api.version>2.1.0</shedhack.trace-request-api.version>
        <shedhack.trace-request-filter.version>2.1.0</shedhack.trace-request-filter.version>

        <!-- Docker properties -->
        <docker.image.name>${project.groupId}/${project.artifactId}:${project.version}</docker.image.name>
        <docker.from>java:8u40</docker.from>
        <docker.container.port>8080</docker.container.port>
        <docker.host.port>8080</docker.host.port>

    </properties>

    <dependencies>

        <!-- Spring dependencies -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
        </dependency>

        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-verifier</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Shedhack -->

        <!-- Handles all exceptions -->
        <dependency>
            <groupId>com.shedhack.exception</groupId>
            <artifactId>exception-controller-spring</artifactId>
            <version>${shedhack.exception-controller-spring.version}</version>
        </dependency>

        <!-- Core exception library, uses concept of Business Error Codes -->
        <dependency>
            <groupId>com.shedhack.exception</groupId>
            <artifactId>exception-core</artifactId>
            <version>${shedhack.exception-core.version}</version>
        </dependency>

        <!-- Traces requests, compatible with Sleuth -->
        <dependency>
            <groupId>com.shedhack.trace</groupId>
            <artifactId>trace-request-api</artifactId>
            <version>${shedhack.trace-request-api.version}</version>
        </dependency>

        <dependency>
            <groupId>com.shedhack.trace</groupId>
            <artifactId>trace-request-filter</artifactId>
            <version>${shedhack.trace-request-filter.version}</version>
        </dependency>

        <!-- Swagger -->

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <finalName>${artifactId}-rest</finalName>

        <!-- Added to override properties-->
        <resources>
            <resource>
                <directory>../src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.yml</include>
                    <include>**/*.xml</include>
                    <include>**/*.txt</include>
                </includes>
            </resource>
        </resources>

        <plugins>

            <!-- Git properties -->
            <!-- Initial build will fail unless you add to git, uncomment when ready.
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>src/main/resources/git-build.properties</generateGitPropertiesFilename>
                    <format>properties</format>
                    <dateFormat>dd.MM.yyyy HH:mm:ss z</dateFormat>
                </configuration>
            </plugin> -->

            <!-- Filtering, mvn resources:resources, maven will replace props using @,
            for example you want @pom.version@ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>

            <!-- mvn spring-boot:run -Dserver.port=8081 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>

                    <!-- Helps with automatic restart when files are changed.-->
                    <fork>true</fork>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!-- Creates META-INF/build-info.properties -->
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Docker plugin - docker:build ALWAYS requires to be called after mvn package!!!!!-->
            <!-- docker:build, docker:start, docker:stop, docker:watch, docker:remove, docker:logs, docker:source -->
            <!-- -Ddocker.follow=true also a good option -->
            <!-- To find you docker ip address with docker machine: [docker-machine ip default] -->
            <!-- When running on a mac you may need [eval "$(docker-machine env default)"] : with the quotes -->
            <!-- Running with JMeter (could also run integration tests (need to update the executions):
                mvn package -DskipTests docker:build
                mvn docker:run -Ddocker.follow=false jmeter:jmeter -Dhost=192.168.99.100 -Dport=8080 docker:stop
            -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.15.9</version>
                <configuration>
                    <verbose>true</verbose>
                    <logDate>default</logDate>
                    <autoPull>true</autoPull>
                    <verbose>true</verbose>
                    <images>

                        <image>
                            <alias>service</alias>
                            <name>${docker.image.name}</name>

                            <build>
                                <from>${docker.from}</from>

                                <assembly>
                                    <basedir>/maven</basedir>
                                    <inline xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                            xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
                                            xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">

                                        <dependencySets>
                                            <dependencySet>
                                                <includes>
                                                    <include>${project.groupId}:${project.artifactId}</include>
                                                </includes>
                                                <outputDirectory>.</outputDirectory>
                                                <outputFileNameMapping>app.jar</outputFileNameMapping>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                </assembly>

                                <!-- Expose ports -->
                                <ports>
                                    <port>${docker.container.port}</port>
                                </ports>

                                <entryPoint>
                                    <arg>java</arg>
                                    <arg>-Djava.security.egd=file:/dev/./urandom</arg>
                                    <arg>-jar</arg>
                                    <arg>/maven/app.jar</arg>
                                </entryPoint>

                            </build>

                            <run>
                                <ports>
                                    <port>${docker.host.port}:${docker.container.port}</port>
                                </ports>

                                <log>
                                    <prefix>TC</prefix>
                                    <color>cyan</color>
                                </log>

                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${docker.host.port}/api/ping</url>
                                        <method>GET</method>
                                    </http>
                                    <log>${docker.image.name} is ready.</log>
                                    <time>200000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>

            </plugin>

            <!-- If you wish to host your maven site on github then enable this plugin.
        mvn site will deploy the site to your github page,
        e.g. http://USERNAME.github.io/REPOSITORY.

        This requires you to provide the following properties:
        <github.global.server>github</github.global.server>
               ::where github is defined as a server in your settings.xml::
        <url>https://github.com/USERNAME/REPOSITORY</url>

        <plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <version>0.12</version>
            <configuration>
                <message>Creating site for ${project.version}</message>
            </configuration>
            <executions>
                <execution>
                    <goals>
                        <goal>site</goal>
                    </goals>
                    <phase>site</phase>
                </execution>
            </executions>
        </plugin>-->

            <!-- JUnit tests -->
            <!-- exclude integration tests from normal build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                        <exclude>**/*IntegrationTest.java</exclude>
                        <exclude>**/*ST.java</exclude>
                        <exclude>**/*SpecTest.java</exclude>
                        <exclude>**/*SpecificationTest.java</exclude>
                        <exclude>**/*Spec.java</exclude>
                        <exclude>**/*Specification.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Integration/Specification Tests -->
            <!-- mvn failsafe:integration-test -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>failsafe-integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>none</exclude>
                    </excludes>
                    <includes>
                        <include>**/*IT.java</include>
                        <include>**/*IntegrationTest.java</include>
                        <include>**/*ST.java</include>
                        <include>**/*SpecTest.java</include>
                        <include>**/*SpecificationTest.java</include>
                        <include>**/*Spec.java</include>
                        <include>**/*Specification.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- JMeter tests -->
            <!-- mvn clean jmeter:jmeter -Dhost=localhost -Dport=8080 -->
            <!-- Please note that this will run with mvn site, you should modify this accordingly -->
            <plugin>
                <groupId>com.lazerycode.jmeter</groupId>
                <artifactId>jmeter-maven-plugin</artifactId>
                <version>1.10.1</version>
                <configuration>
                    <skipTests>false</skipTests>
                    <goal>-t</goal>

                    <propertiesUser>
                        <host>${host}</host>
                        <port>${port}</port>
                    </propertiesUser>

                    <propertiesJMeter>
                        <log_level.jmeter>DEBUG</log_level.jmeter>
                    </propertiesJMeter>

                    <jMeterProcessJVMSettings>
                        <xms>1024</xms>
                        <xmx>1024</xmx>
                        <arguments>
                            <argument>-Xprof</argument>
                            <argument>-Xfuture</argument>
                        </arguments>
                    </jMeterProcessJVMSettings>

                    <jmeterPlugins>
                        <plugin>
                            <groupId>kg.apc</groupId>
                            <artifactId>jmeter-plugins</artifactId>
                        </plugin>
                    </jmeterPlugins>

                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>

            <!-- JavaDoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Manifest -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <!-- Manifest -->
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addClasspath>false</addClasspath>
                            <classpathPrefix>lib</classpathPrefix>
                        </manifest>
                        <manifestEntries>
                            <Specification-Title>${project.name}</Specification-Title>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Implementation-Version>${project.version}</Implementation-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- Google Java Style : code formatting : mvn com.coveo:fmt-maven-plugin:format -->
            <!-- https://github.com/coveo/fmt-maven-plugin -->
            <plugin>
                <groupId>com.coveo</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
                <version>2.6.0</version>
                <configuration>
                    <verbose>true</verbose> <!-- false if too much -->
                    <skip>false</skip>
                    <skipSortingImports>false</skipSortingImports>
                    <displayFiles>true</displayFiles> <!-- for check goal ; lists files -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!-- automatically reformats upon build to only check use <goal>check</goal> -->
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <!-- Maven site reports -->
    <reporting>
        <plugins>

            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.12</version>
            </plugin>

            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
            </plugin>

            <!-- Changes report (SVN)-->
            <plugin>
                <artifactId>maven-changelog-plugin</artifactId>
                <version>2.2</version>
            </plugin>

            <!-- Changes.xml plugin - manual release notes, see src/changes/changes.xml for an example -->
            <plugin>
                <artifactId>maven-changes-plugin</artifactId>
                <version>2.10</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- SVN report -->
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.7</version>
                <!-- To override the SCM settings use webAccessUrl/developerConnections in the configuration tag -->
            </plugin>

            <!-- Find bugs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.1</version>
            </plugin>

            <!-- PMD -->
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-plugin-plugin</artifactId>
                <version>3.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.7</version>

                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>

                <!-- To view the maven site, mvn site (-o if too slow), to deploy to a repo mvn site-deploy,
                        to check all modules locally site:stage -->
                <reportSets>
                    <reportSet>
                        <!-- https://maven.apache.org/plugins/maven-project-info-reports-plugin/ -->
                        <!-- distribution-management, index, dependencies, help, issue-tracking,
                            plugins, cim, license, dependency-management, mailing-list, project-team,
                            dependency-convergence, scm, plugin-management, modules, summary -->
                        <reports>
                            <report>index</report>
                            <report>summary</report>
                            <report>cim</report>
                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>dependency-info</report>
                            <report>dependency-management</report>
                            <report>distribution-management</report>
                            <report>issue-tracking</report>
                            <report>license</report>
                            <report>mailing-list</report>
                            <report>project-team</report>
                            <report>scm</report>
                            <report>modules</report>
                            <report>plugins</report>
                            <report>help</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- When the app runs outside of a CI server then we don't have access
            to certain properties, so we just give defaults -->
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>default-property-setter</name>
                </property>
            </activation>

            <!-- default values, please adjust or use the spring Value default -->
            <properties>
                <ci.build>unknown</ci.build>
                <ci.url>unknown</ci.url>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>

</project>